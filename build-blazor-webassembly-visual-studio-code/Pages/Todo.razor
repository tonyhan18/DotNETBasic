@page "/todo"

<h3>Todo ( @todos.Count(todo => !todo.IsDone) )</h3>
<ul>
	@foreach (var todo in todos)
	{
		<li>
			<input type="checkbox" @bind="todo.IsDone"/>
			<input @bind="todo.title" />
		</li>
	}
</ul>

@* bind 는 데이터 바인딩을 위한 목적, input 태그에 value와 묶여 변경을 처리 *@
<input placeholder="Something todo" @bind="newtodo"/>
<button @onclick="AddTodo">Add todo</button>

@code {
	// new() 사용시 클래스 생성자를 호출하여 객체 생성과 초기화를 한 번에 진행
	// List<> 배열은 동적 크기를 가짐. 체인 링크드 리스트 방식
	// [] 배열은 고정된 정적 크기
	private List<TodoItem> todos = new();
	//String 과 string은 차이가 없다. 그러니 자료형을 잘 표현하기 위해 나는 대문자를 쓰면 된다.
	private String newtodo;
	private void AddTodo()
	{
		if (newtodo !=null)
		{
			todos.Add(new TodoItem{title=newtodo, IsDone=true});
			newtodo = String.Empty;
		}
	}

}
